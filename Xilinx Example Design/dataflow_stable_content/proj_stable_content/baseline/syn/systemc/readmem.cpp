// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "readmem.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic readmem::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic readmem::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> readmem::ap_ST_fsm_state1 = "1";
const sc_lv<5> readmem::ap_ST_fsm_state2 = "10";
const sc_lv<5> readmem::ap_ST_fsm_state3 = "100";
const sc_lv<5> readmem::ap_ST_fsm_state4 = "1000";
const sc_lv<5> readmem::ap_ST_fsm_state5 = "10000";
const sc_lv<32> readmem::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> readmem::ap_const_lv32_1 = "1";
const sc_lv<1> readmem::ap_const_lv1_0 = "0";
const sc_lv<32> readmem::ap_const_lv32_3 = "11";
const sc_lv<1> readmem::ap_const_lv1_1 = "1";
const sc_lv<32> readmem::ap_const_lv32_4 = "100";
const sc_lv<4> readmem::ap_const_lv4_0 = "0000";
const sc_lv<32> readmem::ap_const_lv32_2 = "10";
const sc_lv<4> readmem::ap_const_lv4_A = "1010";
const sc_lv<4> readmem::ap_const_lv4_1 = "1";
const sc_lv<32> readmem::ap_const_lv32_A = "1010";
const bool readmem::ap_const_boolean_1 = true;

readmem::readmem(sc_module_name name) : sc_module(name), mVcdFile(0) {
    req_strm_V_fifo_U = new fifo_w32_d4_A("req_strm_V_fifo_U");
    req_strm_V_fifo_U->clk(ap_clk);
    req_strm_V_fifo_U->reset(ap_rst);
    req_strm_V_fifo_U->if_read_ce(ap_var_for_const0);
    req_strm_V_fifo_U->if_write_ce(ap_var_for_const0);
    req_strm_V_fifo_U->if_din(req_strm_V_din);
    req_strm_V_fifo_U->if_full_n(req_strm_V_full_n);
    req_strm_V_fifo_U->if_write(req_strm_V_write);
    req_strm_V_fifo_U->if_dout(req_strm_V_dout);
    req_strm_V_fifo_U->if_empty_n(req_strm_V_empty_n);
    req_strm_V_fifo_U->if_read(req_strm_V_read);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( in_strm_V_empty_n );
    sensitive << ( icmp_ln20_fu_181_p2 );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( req_strm_V_full_n );
    sensitive << ( icmp_ln24_fu_198_p2 );

    SC_METHOD(thread_ap_block_state4);
    sensitive << ( out_strm_V_full_n );
    sensitive << ( icmp_ln40_fu_204_p2 );
    sensitive << ( req_strm_V_empty_n );

    SC_METHOD(thread_ap_condition_121);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( req_strm_V_full_n );
    sensitive << ( icmp_ln24_fu_198_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_strm_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln40_fu_204_p2 );
    sensitive << ( req_strm_V_empty_n );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( out_strm_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln40_fu_204_p2 );
    sensitive << ( req_strm_V_empty_n );

    SC_METHOD(thread_i_1_fu_187_p2);
    sensitive << ( i_0_i_reg_146 );

    SC_METHOD(thread_i_fu_210_p2);
    sensitive << ( i_0_i2_reg_170 );

    SC_METHOD(thread_icmp_ln20_fu_181_p2);
    sensitive << ( in_strm_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln20_fu_181_p2 );
    sensitive << ( i_0_i_reg_146 );

    SC_METHOD(thread_icmp_ln24_fu_198_p2);
    sensitive << ( tb_q0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( req_strm_V_full_n );
    sensitive << ( icmp_ln24_fu_198_p2 );

    SC_METHOD(thread_icmp_ln40_fu_204_p2);
    sensitive << ( out_strm_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln40_fu_204_p2 );
    sensitive << ( req_strm_V_empty_n );
    sensitive << ( i_0_i2_reg_170 );

    SC_METHOD(thread_icmp_ln43_fu_216_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( req_strm_V_dout );

    SC_METHOD(thread_icmp_ln43_fu_216_p2);
    sensitive << ( out_strm_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln40_fu_204_p2 );
    sensitive << ( req_strm_V_empty_n );
    sensitive << ( icmp_ln43_fu_216_p0 );

    SC_METHOD(thread_in_strm_V_blk_n);
    sensitive << ( in_strm_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln20_fu_181_p2 );

    SC_METHOD(thread_in_strm_V_read);
    sensitive << ( in_strm_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln20_fu_181_p2 );

    SC_METHOD(thread_out_strm_V_blk_n);
    sensitive << ( out_strm_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln40_fu_204_p2 );

    SC_METHOD(thread_out_strm_V_din);
    sensitive << ( out_strm_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln40_fu_204_p2 );
    sensitive << ( req_strm_V_empty_n );
    sensitive << ( tmp_1_reg_157 );

    SC_METHOD(thread_out_strm_V_write);
    sensitive << ( out_strm_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln40_fu_204_p2 );
    sensitive << ( req_strm_V_empty_n );

    SC_METHOD(thread_req_strm_V_din);
    sensitive << ( tmp_reg_254 );
    sensitive << ( icmp_ln24_fu_198_p2 );
    sensitive << ( ap_condition_121 );

    SC_METHOD(thread_req_strm_V_read);
    sensitive << ( out_strm_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln40_fu_204_p2 );
    sensitive << ( req_strm_V_empty_n );

    SC_METHOD(thread_req_strm_V_write);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( req_strm_V_full_n );
    sensitive << ( icmp_ln24_fu_198_p2 );

    SC_METHOD(thread_sext_ln23_fu_193_p0);
    sensitive << ( in_strm_V_dout );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sext_ln23_fu_193_p1);
    sensitive << ( sext_ln23_fu_193_p0 );

    SC_METHOD(thread_sext_ln45_fu_222_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( req_strm_V_dout );

    SC_METHOD(thread_sext_ln45_fu_222_p1);
    sensitive << ( sext_ln45_fu_222_p0 );

    SC_METHOD(thread_sum_1_fu_233_p3);
    sensitive << ( icmp_ln43_reg_275 );
    sensitive << ( tmp_1_reg_157 );
    sensitive << ( sum_fu_227_p2 );

    SC_METHOD(thread_sum_fu_227_p2);
    sensitive << ( tb_q0 );
    sensitive << ( tmp_1_reg_157 );

    SC_METHOD(thread_tb_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln23_fu_193_p1 );
    sensitive << ( sext_ln45_fu_222_p1 );

    SC_METHOD(thread_tb_ce0);
    sensitive << ( in_strm_V_empty_n );
    sensitive << ( out_strm_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln20_fu_181_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln40_fu_204_p2 );
    sensitive << ( req_strm_V_empty_n );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_strm_V_empty_n );
    sensitive << ( out_strm_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln20_fu_181_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln40_fu_204_p2 );
    sensitive << ( req_strm_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( req_strm_V_full_n );
    sensitive << ( icmp_ln24_fu_198_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "readmem_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_strm_V_dout, "(port)in_strm_V_dout");
    sc_trace(mVcdFile, in_strm_V_empty_n, "(port)in_strm_V_empty_n");
    sc_trace(mVcdFile, in_strm_V_read, "(port)in_strm_V_read");
    sc_trace(mVcdFile, out_strm_V_din, "(port)out_strm_V_din");
    sc_trace(mVcdFile, out_strm_V_full_n, "(port)out_strm_V_full_n");
    sc_trace(mVcdFile, out_strm_V_write, "(port)out_strm_V_write");
    sc_trace(mVcdFile, tb_address0, "(port)tb_address0");
    sc_trace(mVcdFile, tb_ce0, "(port)tb_ce0");
    sc_trace(mVcdFile, tb_q0, "(port)tb_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, in_strm_V_blk_n, "in_strm_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln20_fu_181_p2, "icmp_ln20_fu_181_p2");
    sc_trace(mVcdFile, out_strm_V_blk_n, "out_strm_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln40_fu_204_p2, "icmp_ln40_fu_204_p2");
    sc_trace(mVcdFile, i_1_fu_187_p2, "i_1_fu_187_p2");
    sc_trace(mVcdFile, i_1_reg_249, "i_1_reg_249");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, tmp_reg_254, "tmp_reg_254");
    sc_trace(mVcdFile, i_fu_210_p2, "i_fu_210_p2");
    sc_trace(mVcdFile, i_reg_270, "i_reg_270");
    sc_trace(mVcdFile, req_strm_V_dout, "req_strm_V_dout");
    sc_trace(mVcdFile, req_strm_V_empty_n, "req_strm_V_empty_n");
    sc_trace(mVcdFile, req_strm_V_read, "req_strm_V_read");
    sc_trace(mVcdFile, ap_block_state4, "ap_block_state4");
    sc_trace(mVcdFile, icmp_ln43_fu_216_p2, "icmp_ln43_fu_216_p2");
    sc_trace(mVcdFile, icmp_ln43_reg_275, "icmp_ln43_reg_275");
    sc_trace(mVcdFile, sum_1_fu_233_p3, "sum_1_fu_233_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_0_i_reg_146, "i_0_i_reg_146");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, req_strm_V_din, "req_strm_V_din");
    sc_trace(mVcdFile, req_strm_V_full_n, "req_strm_V_full_n");
    sc_trace(mVcdFile, req_strm_V_write, "req_strm_V_write");
    sc_trace(mVcdFile, icmp_ln24_fu_198_p2, "icmp_ln24_fu_198_p2");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, tmp_1_reg_157, "tmp_1_reg_157");
    sc_trace(mVcdFile, i_0_i2_reg_170, "i_0_i2_reg_170");
    sc_trace(mVcdFile, sext_ln23_fu_193_p1, "sext_ln23_fu_193_p1");
    sc_trace(mVcdFile, sext_ln45_fu_222_p1, "sext_ln45_fu_222_p1");
    sc_trace(mVcdFile, sext_ln23_fu_193_p0, "sext_ln23_fu_193_p0");
    sc_trace(mVcdFile, icmp_ln43_fu_216_p0, "icmp_ln43_fu_216_p0");
    sc_trace(mVcdFile, sext_ln45_fu_222_p0, "sext_ln45_fu_222_p0");
    sc_trace(mVcdFile, sum_fu_227_p2, "sum_fu_227_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_121, "ap_condition_121");
#endif

    }
}

readmem::~readmem() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete req_strm_V_fifo_U;
}

void readmem::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void readmem::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_0_i2_reg_170 = i_reg_270.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(icmp_ln20_fu_181_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_strm_V_empty_n.read())) && 
                esl_seteq<1,1,1>(icmp_ln20_fu_181_p2.read(), ap_const_lv1_1))) {
        i_0_i2_reg_170 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln24_fu_198_p2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_198_p2.read()))))) {
        i_0_i_reg_146 = i_1_reg_249.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_i_reg_146 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_1_reg_157 = sum_1_fu_233_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(icmp_ln20_fu_181_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_strm_V_empty_n.read())) && 
                esl_seteq<1,1,1>(icmp_ln20_fu_181_p2.read(), ap_const_lv1_1))) {
        tmp_1_reg_157 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(icmp_ln20_fu_181_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_strm_V_empty_n.read())))) {
        i_1_reg_249 = i_1_fu_187_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_fu_204_p2.read())) || (esl_seteq<1,1,1>(icmp_ln40_fu_204_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_strm_V_full_n.read()))))) {
        i_reg_270 = i_fu_210_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_fu_204_p2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_fu_204_p2.read())) || (esl_seteq<1,1,1>(icmp_ln40_fu_204_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_strm_V_full_n.read()))))) {
        icmp_ln43_reg_275 = icmp_ln43_fu_216_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln20_fu_181_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln20_fu_181_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_strm_V_empty_n.read())))) {
        tmp_reg_254 = in_strm_V_dout.read();
    }
}

void readmem::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void readmem::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void readmem::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void readmem::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void readmem::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void readmem::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(icmp_ln20_fu_181_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_strm_V_empty_n.read()));
}

void readmem::thread_ap_block_state3() {
    ap_block_state3 = ((esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln24_fu_198_p2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_198_p2.read())));
}

void readmem::thread_ap_block_state4() {
    ap_block_state4 = ((esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_fu_204_p2.read())) || (esl_seteq<1,1,1>(icmp_ln40_fu_204_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_strm_V_full_n.read())));
}

void readmem::thread_ap_condition_121() {
    ap_condition_121 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln24_fu_198_p2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_198_p2.read()))));
}

void readmem::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(icmp_ln40_fu_204_p2.read(), ap_const_lv1_1) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_fu_204_p2.read())) || (esl_seteq<1,1,1>(icmp_ln40_fu_204_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_strm_V_full_n.read())))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void readmem::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void readmem::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln40_fu_204_p2.read(), ap_const_lv1_1) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_fu_204_p2.read())) || (esl_seteq<1,1,1>(icmp_ln40_fu_204_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_strm_V_full_n.read()))))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void readmem::thread_i_1_fu_187_p2() {
    i_1_fu_187_p2 = (!i_0_i_reg_146.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_i_reg_146.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void readmem::thread_i_fu_210_p2() {
    i_fu_210_p2 = (!i_0_i2_reg_170.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_i2_reg_170.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void readmem::thread_icmp_ln20_fu_181_p2() {
    icmp_ln20_fu_181_p2 = (!i_0_i_reg_146.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_146.read() == ap_const_lv4_A);
}

void readmem::thread_icmp_ln24_fu_198_p2() {
    icmp_ln24_fu_198_p2 = (!tb_q0.read().is_01() || !ap_const_lv32_A.is_01())? sc_lv<1>(): (sc_bigint<32>(tb_q0.read()) < sc_bigint<32>(ap_const_lv32_A));
}

void readmem::thread_icmp_ln40_fu_204_p2() {
    icmp_ln40_fu_204_p2 = (!i_0_i2_reg_170.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i2_reg_170.read() == ap_const_lv4_A);
}

void readmem::thread_icmp_ln43_fu_216_p0() {
    icmp_ln43_fu_216_p0 = req_strm_V_dout.read();
}

void readmem::thread_icmp_ln43_fu_216_p2() {
    icmp_ln43_fu_216_p2 = (!icmp_ln43_fu_216_p0.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(icmp_ln43_fu_216_p0.read() == ap_const_lv32_0);
}

void readmem::thread_in_strm_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln20_fu_181_p2.read(), ap_const_lv1_0))) {
        in_strm_V_blk_n = in_strm_V_empty_n.read();
    } else {
        in_strm_V_blk_n = ap_const_logic_1;
    }
}

void readmem::thread_in_strm_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln20_fu_181_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln20_fu_181_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_strm_V_empty_n.read())))) {
        in_strm_V_read = ap_const_logic_1;
    } else {
        in_strm_V_read = ap_const_logic_0;
    }
}

void readmem::thread_out_strm_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln40_fu_204_p2.read(), ap_const_lv1_1))) {
        out_strm_V_blk_n = out_strm_V_full_n.read();
    } else {
        out_strm_V_blk_n = ap_const_logic_1;
    }
}

void readmem::thread_out_strm_V_din() {
    out_strm_V_din = tmp_1_reg_157.read();
}

void readmem::thread_out_strm_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln40_fu_204_p2.read(), ap_const_lv1_1) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_fu_204_p2.read())) || (esl_seteq<1,1,1>(icmp_ln40_fu_204_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_strm_V_full_n.read()))))) {
        out_strm_V_write = ap_const_logic_1;
    } else {
        out_strm_V_write = ap_const_logic_0;
    }
}

void readmem::thread_req_strm_V_din() {
    if (esl_seteq<1,1,1>(ap_condition_121.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_198_p2.read())) {
            req_strm_V_din = tmp_reg_254.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln24_fu_198_p2.read())) {
            req_strm_V_din = ap_const_lv32_0;
        } else {
            req_strm_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        req_strm_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void readmem::thread_req_strm_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_fu_204_p2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_fu_204_p2.read())) || (esl_seteq<1,1,1>(icmp_ln40_fu_204_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_strm_V_full_n.read()))))) {
        req_strm_V_read = ap_const_logic_1;
    } else {
        req_strm_V_read = ap_const_logic_0;
    }
}

void readmem::thread_req_strm_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln24_fu_198_p2.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln24_fu_198_p2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_198_p2.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_198_p2.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln24_fu_198_p2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_198_p2.read())))))) {
        req_strm_V_write = ap_const_logic_1;
    } else {
        req_strm_V_write = ap_const_logic_0;
    }
}

void readmem::thread_sext_ln23_fu_193_p0() {
    sext_ln23_fu_193_p0 = in_strm_V_dout.read();
}

void readmem::thread_sext_ln23_fu_193_p1() {
    sext_ln23_fu_193_p1 = esl_sext<64,32>(sext_ln23_fu_193_p0.read());
}

void readmem::thread_sext_ln45_fu_222_p0() {
    sext_ln45_fu_222_p0 = req_strm_V_dout.read();
}

void readmem::thread_sext_ln45_fu_222_p1() {
    sext_ln45_fu_222_p1 = esl_sext<64,32>(sext_ln45_fu_222_p0.read());
}

void readmem::thread_sum_1_fu_233_p3() {
    sum_1_fu_233_p3 = (!icmp_ln43_reg_275.read()[0].is_01())? sc_lv<32>(): ((icmp_ln43_reg_275.read()[0].to_bool())? tmp_1_reg_157.read(): sum_fu_227_p2.read());
}

void readmem::thread_sum_fu_227_p2() {
    sum_fu_227_p2 = (!tb_q0.read().is_01() || !tmp_1_reg_157.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tb_q0.read()) + sc_biguint<32>(tmp_1_reg_157.read()));
}

void readmem::thread_tb_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tb_address0 =  (sc_lv<4>) (sext_ln45_fu_222_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tb_address0 =  (sc_lv<4>) (sext_ln23_fu_193_p1.read());
    } else {
        tb_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void readmem::thread_tb_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(icmp_ln20_fu_181_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_strm_V_empty_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_fu_204_p2.read())) || (esl_seteq<1,1,1>(icmp_ln40_fu_204_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_strm_V_full_n.read())))))) {
        tb_ce0 = ap_const_logic_1;
    } else {
        tb_ce0 = ap_const_logic_0;
    }
}

void readmem::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(icmp_ln20_fu_181_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_strm_V_empty_n.read())) && esl_seteq<1,1,1>(icmp_ln20_fu_181_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln20_fu_181_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln20_fu_181_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_strm_V_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln24_fu_198_p2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_198_p2.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln40_fu_204_p2.read(), ap_const_lv1_1) && !((esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_fu_204_p2.read())) || (esl_seteq<1,1,1>(icmp_ln40_fu_204_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_strm_V_full_n.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_fu_204_p2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, req_strm_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_fu_204_p2.read())) || (esl_seteq<1,1,1>(icmp_ln40_fu_204_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_strm_V_full_n.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

}

