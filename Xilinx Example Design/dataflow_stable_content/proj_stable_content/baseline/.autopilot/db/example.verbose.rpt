

================================================================
== Vivado HLS Report for 'example'
================================================================
* Date:           Fri Dec 25 16:44:36 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        proj_stable_content
* Solution:       baseline
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 13.33 ns | 6.888 ns |   1.67 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       54|       54| 0.720 us | 0.720 us |   54|   54|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        +--------------------+---------+---------+---------+----------+----------+-----+-----+---------+
        |                    |         |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
        |      Instance      |  Module |   min   |   max   |    min   |    max   | min | max |   Type  |
        +--------------------+---------+---------+---------+----------+----------+-----+-----+---------+
        |grp_readmem_fu_126  |readmem  |       42|       42| 0.560 us | 0.560 us |   42|   42|   none  |
        +--------------------+---------+---------+---------+----------+----------+-----+-----+---------+

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- load    |       10|       10|         1|          -|          -|    10|    no    |
        +----------+---------+---------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+-----+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  | URAM|
+-----------------+---------+-------+--------+-------+-----+
|DSP              |        -|      -|       -|      -|    -|
|Expression       |        -|      -|       0|     24|    -|
|FIFO             |        -|      -|       -|      -|    -|
|Instance         |        0|      -|      91|    311|    -|
|Memory           |        1|      -|       0|      0|    0|
|Multiplexer      |        -|      -|       -|     66|    -|
|Register         |        -|      -|       8|      -|    -|
+-----------------+---------+-------+--------+-------+-----+
|Total            |        1|      0|      99|    401|    0|
+-----------------+---------+-------+--------+-------+-----+
|Available        |      280|    220|  106400|  53200|    0|
+-----------------+---------+-------+--------+-------+-----+
|Utilization (%)  |    ~0   |      0|   ~0   |   ~0  |    0|
+-----------------+---------+-------+--------+-------+-----+

+ Detail: 
    * Instance: 
    +--------------------+---------+---------+-------+----+-----+-----+
    |      Instance      |  Module | BRAM_18K| DSP48E| FF | LUT | URAM|
    +--------------------+---------+---------+-------+----+-----+-----+
    |grp_readmem_fu_126  |readmem  |        0|      0|  91|  311|    0|
    +--------------------+---------+---------+-------+----+-----+-----+
    |Total               |         |        0|      0|  91|  311|    0|
    +--------------------+---------+---------+-------+----+-----+-----+

    * DSP48E: 
    N/A

    * Memory: 
    +-------+------------+---------+---+----+-----+------+-----+------+-------------+
    | Memory|   Module   | BRAM_18K| FF| LUT| URAM| Words| Bits| Banks| W*Bits*Banks|
    +-------+------------+---------+---+----+-----+------+-----+------+-------------+
    |tb_U   |example_tb  |        1|  0|   0|    0|    10|   32|     1|          320|
    +-------+------------+---------+---+----+-----+------+-----+------+-------------+
    |Total  |            |        1|  0|   0|    0|    10|   32|     1|          320|
    +-------+------------+---------+---+----+-----+------+-----+------+-------------+

    * FIFO: 
    N/A

    * Expression: 
    +---------------------+----------+-------+---+----+------------+------------+
    |    Variable Name    | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +---------------------+----------+-------+---+----+------------+------------+
    |i_fu_141_p2          |     +    |      0|  0|  13|           4|           1|
    |ap_block_state2      |    and   |      0|  0|   2|           1|           1|
    |icmp_ln65_fu_135_p2  |   icmp   |      0|  0|   9|           4|           4|
    +---------------------+----------+-------+---+----+------------+------------+
    |Total                |          |      0|  0|  24|           9|           6|
    +---------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +------------------+----+-----------+-----+-----------+
    |       Name       | LUT| Input Size| Bits| Total Bits|
    +------------------+----+-----------+-----+-----------+
    |ap_NS_fsm         |  21|          4|    1|          4|
    |i_0_i_reg_115     |   9|          2|    4|          8|
    |in1_strm_V_blk_n  |   9|          2|    1|          2|
    |in2_strm_V_read   |   9|          2|    1|          2|
    |out_strm_V_write  |   9|          2|    1|          2|
    |tb_ce0            |   9|          2|    1|          2|
    +------------------+----+-----------+-----+-----------+
    |Total             |  66|         14|    9|         20|
    +------------------+----+-----------+-----+-----------+

    * Register: 
    +---------------------------------+---+----+-----+-----------+
    |               Name              | FF| LUT| Bits| Const Bits|
    +---------------------------------+---+----+-----+-----------+
    |ap_CS_fsm                        |  3|   0|    3|          0|
    |grp_readmem_fu_126_ap_start_reg  |  1|   0|    1|          0|
    |i_0_i_reg_115                    |  4|   0|    4|          0|
    +---------------------------------+---+----+-----+-----------+
    |Total                            |  8|   0|    8|          0|
    +---------------------------------+---+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+--------------------+-----+-----+------------+--------------+--------------+
|      RTL Ports     | Dir | Bits|  Protocol  | Source Object|    C Type    |
+--------------------+-----+-----+------------+--------------+--------------+
|ap_clk              |  in |    1| ap_ctrl_hs |    example   | return value |
|ap_rst              |  in |    1| ap_ctrl_hs |    example   | return value |
|ap_start            |  in |    1| ap_ctrl_hs |    example   | return value |
|ap_done             | out |    1| ap_ctrl_hs |    example   | return value |
|ap_idle             | out |    1| ap_ctrl_hs |    example   | return value |
|ap_ready            | out |    1| ap_ctrl_hs |    example   | return value |
|in1_strm_V_dout     |  in |   32|   ap_fifo  |  in1_strm_V  |    pointer   |
|in1_strm_V_empty_n  |  in |    1|   ap_fifo  |  in1_strm_V  |    pointer   |
|in1_strm_V_read     | out |    1|   ap_fifo  |  in1_strm_V  |    pointer   |
|in2_strm_V_dout     |  in |   32|   ap_fifo  |  in2_strm_V  |    pointer   |
|in2_strm_V_empty_n  |  in |    1|   ap_fifo  |  in2_strm_V  |    pointer   |
|in2_strm_V_read     | out |    1|   ap_fifo  |  in2_strm_V  |    pointer   |
|out_strm_V_din      | out |   32|   ap_fifo  |  out_strm_V  |    pointer   |
|out_strm_V_full_n   |  in |    1|   ap_fifo  |  out_strm_V  |    pointer   |
|out_strm_V_write    | out |    1|   ap_fifo  |  out_strm_V  |    pointer   |
+--------------------+-----+-----+------------+--------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 2 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.25>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecInterface(i32* %out_strm_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str31, i32 0, i32 0, [1 x i8]* @p_str32, [1 x i8]* @p_str33, [1 x i8]* @p_str34, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str35, [1 x i8]* @p_str36)"   --->   Operation 4 'specinterface' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %in2_strm_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str25, i32 0, i32 0, [1 x i8]* @p_str26, [1 x i8]* @p_str27, [1 x i8]* @p_str28, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str29, [1 x i8]* @p_str30)"   --->   Operation 5 'specinterface' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %in1_strm_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str19, i32 0, i32 0, [1 x i8]* @p_str20, [1 x i8]* @p_str21, [1 x i8]* @p_str22, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str23, [1 x i8]* @p_str24)"   --->   Operation 6 'specinterface' 'empty_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %in1_strm_V), !map !33"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %in2_strm_V), !map !39"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %out_strm_V), !map !43"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @example_str) nounwind"   --->   Operation 10 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (3.25ns)   --->   "%tb = alloca [10 x i32], align 16" [example.cpp:76]   --->   Operation 11 'alloca' 'tb' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([10 x i32]* %tb, [1 x i8]* @p_str2, [12 x i8]* @p_str4, [1 x i8]* @p_str2, i32 -1, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2)" [example.cpp:77]   --->   Operation 12 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([10 x i32]* %tb, [1 x i8]* @p_str2, [12 x i8]* @p_str4, [1 x i8]* @p_str2, i32 -1, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2)"   --->   Operation 13 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (1.76ns)   --->   "br label %1" [example.cpp:65->example.cpp:78]   --->   Operation 14 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 6.88>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%i_0_i = phi i4 [ 0, %0 ], [ %i, %2 ]"   --->   Operation 15 'phi' 'i_0_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (1.30ns)   --->   "%icmp_ln65 = icmp eq i4 %i_0_i, -6" [example.cpp:65->example.cpp:78]   --->   Operation 16 'icmp' 'icmp_ln65' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 17 'speclooptripcount' 'empty_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.73ns)   --->   "%i = add i4 %i_0_i, 1" [example.cpp:65->example.cpp:78]   --->   Operation 18 'add' 'i' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "br i1 %icmp_ln65, label %writemem.exit, label %2" [example.cpp:65->example.cpp:78]   --->   Operation 19 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([5 x i8]* @p_str3) nounwind" [example.cpp:66->example.cpp:78]   --->   Operation 20 'specloopname' <Predicate = (!icmp_ln65)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (3.63ns)   --->   "%tmp = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %in1_strm_V)" [example.cpp:67->example.cpp:78]   --->   Operation 21 'read' 'tmp' <Predicate = (!icmp_ln65)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln68 = zext i4 %i_0_i to i64" [example.cpp:68->example.cpp:78]   --->   Operation 22 'zext' 'zext_ln68' <Predicate = (!icmp_ln65)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%tb_addr = getelementptr [10 x i32]* %tb, i64 0, i64 %zext_ln68" [example.cpp:68->example.cpp:78]   --->   Operation 23 'getelementptr' 'tb_addr' <Predicate = (!icmp_ln65)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (3.25ns)   --->   "store i32 %tmp, i32* %tb_addr, align 4" [example.cpp:68->example.cpp:78]   --->   Operation 24 'store' <Predicate = (!icmp_ln65)> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "br label %1" [example.cpp:65->example.cpp:78]   --->   Operation 25 'br' <Predicate = (!icmp_ln65)> <Delay = 0.00>
ST_2 : Operation 26 [2/2] (0.00ns)   --->   "call fastcc void @readmem(i32* %in2_strm_V, i32* %out_strm_V, [10 x i32]* %tb)" [example.cpp:79]   --->   Operation 26 'call' <Predicate = (icmp_ln65)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 27 [1/2] (0.00ns)   --->   "call fastcc void @readmem(i32* %in2_strm_V, i32* %out_strm_V, [10 x i32]* %tb)" [example.cpp:79]   --->   Operation 27 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "ret void" [example.cpp:80]   --->   Operation 28 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ in1_strm_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
Port [ in2_strm_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
Port [ out_strm_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
empty             (specinterface    ) [ 0000]
empty_9           (specinterface    ) [ 0000]
empty_10          (specinterface    ) [ 0000]
specbitsmap_ln0   (specbitsmap      ) [ 0000]
specbitsmap_ln0   (specbitsmap      ) [ 0000]
specbitsmap_ln0   (specbitsmap      ) [ 0000]
spectopmodule_ln0 (spectopmodule    ) [ 0000]
tb                (alloca           ) [ 0011]
specmemcore_ln77  (specmemcore      ) [ 0000]
specmemcore_ln0   (specmemcore      ) [ 0000]
br_ln65           (br               ) [ 0110]
i_0_i             (phi              ) [ 0010]
icmp_ln65         (icmp             ) [ 0010]
empty_11          (speclooptripcount) [ 0000]
i                 (add              ) [ 0110]
br_ln65           (br               ) [ 0000]
specloopname_ln66 (specloopname     ) [ 0000]
tmp               (read             ) [ 0000]
zext_ln68         (zext             ) [ 0000]
tb_addr           (getelementptr    ) [ 0000]
store_ln68        (store            ) [ 0000]
br_ln65           (br               ) [ 0110]
call_ln79         (call             ) [ 0000]
ret_ln80          (ret              ) [ 0000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="in1_strm_V">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="in1_strm_V"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="in2_strm_V">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="in2_strm_V"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="out_strm_V">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="out_strm_V"/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="ap_fifo_str"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str31"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str32"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str33"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str34"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str35"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str36"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str25"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str26"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str27"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str28"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str29"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str30"/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str19"/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str20"/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str21"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str22"/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str23"/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str24"/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="example_str"/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecMemCore"/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str4"/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="68" class="1001" name="const_68">
<pin_list>
<pin id="69" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="70" class="1001" name="const_70">
<pin_list>
<pin id="71" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="72" class="1001" name="const_72">
<pin_list>
<pin id="73" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopTripCount"/></StgValue>
</bind>
</comp>

<comp id="74" class="1001" name="const_74">
<pin_list>
<pin id="75" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="76" class="1001" name="const_76">
<pin_list>
<pin id="77" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="78" class="1001" name="const_78">
<pin_list>
<pin id="79" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopName"/></StgValue>
</bind>
</comp>

<comp id="80" class="1001" name="const_80">
<pin_list>
<pin id="81" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="82" class="1001" name="const_82">
<pin_list>
<pin id="83" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_fifo.volatile.i32P"/></StgValue>
</bind>
</comp>

<comp id="84" class="1001" name="const_84">
<pin_list>
<pin id="85" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="86" class="1001" name="const_86">
<pin_list>
<pin id="87" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="readmem"/></StgValue>
</bind>
</comp>

<comp id="88" class="1004" name="tb_alloca_fu_88">
<pin_list>
<pin id="89" dir="0" index="0" bw="1" slack="0"/>
<pin id="90" dir="1" index="1" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="tb/1 "/>
</bind>
</comp>

<comp id="92" class="1004" name="tmp_read_fu_92">
<pin_list>
<pin id="93" dir="0" index="0" bw="32" slack="0"/>
<pin id="94" dir="0" index="1" bw="32" slack="0"/>
<pin id="95" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="tmp/2 "/>
</bind>
</comp>

<comp id="98" class="1004" name="tb_addr_gep_fu_98">
<pin_list>
<pin id="99" dir="0" index="0" bw="32" slack="2147483647"/>
<pin id="100" dir="0" index="1" bw="1" slack="0"/>
<pin id="101" dir="0" index="2" bw="4" slack="0"/>
<pin id="102" dir="1" index="3" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="tb_addr/2 "/>
</bind>
</comp>

<comp id="104" class="1004" name="store_ln68_access_fu_104">
<pin_list>
<pin id="105" dir="0" index="0" bw="4" slack="2147483647"/>
<pin id="106" dir="0" index="1" bw="32" slack="2147483647"/>
<pin id="107" dir="0" index="2" bw="0" slack="0"/>
<pin id="109" dir="0" index="4" bw="4" slack="0"/>
<pin id="110" dir="0" index="5" bw="32" slack="2147483647"/>
<pin id="111" dir="0" index="6" bw="0" slack="2147483647"/>
<pin id="108" dir="1" index="3" bw="32" slack="2147483647"/>
<pin id="112" dir="1" index="7" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln68/2 "/>
</bind>
</comp>

<comp id="115" class="1005" name="i_0_i_reg_115">
<pin_list>
<pin id="116" dir="0" index="0" bw="4" slack="1"/>
<pin id="117" dir="1" index="1" bw="4" slack="1"/>
</pin_list>
<bind>
<opset="i_0_i (phireg) "/>
</bind>
</comp>

<comp id="119" class="1004" name="i_0_i_phi_fu_119">
<pin_list>
<pin id="120" dir="0" index="0" bw="1" slack="1"/>
<pin id="121" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="122" dir="0" index="2" bw="4" slack="0"/>
<pin id="123" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="124" dir="1" index="4" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="i_0_i/2 "/>
</bind>
</comp>

<comp id="126" class="1004" name="grp_readmem_fu_126">
<pin_list>
<pin id="127" dir="0" index="0" bw="0" slack="0"/>
<pin id="128" dir="0" index="1" bw="32" slack="0"/>
<pin id="129" dir="0" index="2" bw="32" slack="0"/>
<pin id="130" dir="0" index="3" bw="32" slack="2147483647"/>
<pin id="131" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="call(48) " fcode="call"/>
<opset="call_ln79/2 "/>
</bind>
</comp>

<comp id="135" class="1004" name="icmp_ln65_fu_135">
<pin_list>
<pin id="136" dir="0" index="0" bw="4" slack="0"/>
<pin id="137" dir="0" index="1" bw="4" slack="0"/>
<pin id="138" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln65/2 "/>
</bind>
</comp>

<comp id="141" class="1004" name="i_fu_141">
<pin_list>
<pin id="142" dir="0" index="0" bw="4" slack="0"/>
<pin id="143" dir="0" index="1" bw="1" slack="0"/>
<pin id="144" dir="1" index="2" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="i/2 "/>
</bind>
</comp>

<comp id="147" class="1004" name="zext_ln68_fu_147">
<pin_list>
<pin id="148" dir="0" index="0" bw="4" slack="0"/>
<pin id="149" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln68/2 "/>
</bind>
</comp>

<comp id="155" class="1005" name="i_reg_155">
<pin_list>
<pin id="156" dir="0" index="0" bw="4" slack="0"/>
<pin id="157" dir="1" index="1" bw="4" slack="0"/>
</pin_list>
<bind>
<opset="i "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="91"><net_src comp="58" pin="0"/><net_sink comp="88" pin=0"/></net>

<net id="96"><net_src comp="82" pin="0"/><net_sink comp="92" pin=0"/></net>

<net id="97"><net_src comp="0" pin="0"/><net_sink comp="92" pin=1"/></net>

<net id="103"><net_src comp="84" pin="0"/><net_sink comp="98" pin=1"/></net>

<net id="113"><net_src comp="92" pin="2"/><net_sink comp="104" pin=4"/></net>

<net id="114"><net_src comp="98" pin="3"/><net_sink comp="104" pin=2"/></net>

<net id="118"><net_src comp="68" pin="0"/><net_sink comp="115" pin=0"/></net>

<net id="125"><net_src comp="115" pin="1"/><net_sink comp="119" pin=0"/></net>

<net id="132"><net_src comp="86" pin="0"/><net_sink comp="126" pin=0"/></net>

<net id="133"><net_src comp="2" pin="0"/><net_sink comp="126" pin=1"/></net>

<net id="134"><net_src comp="4" pin="0"/><net_sink comp="126" pin=2"/></net>

<net id="139"><net_src comp="119" pin="4"/><net_sink comp="135" pin=0"/></net>

<net id="140"><net_src comp="70" pin="0"/><net_sink comp="135" pin=1"/></net>

<net id="145"><net_src comp="119" pin="4"/><net_sink comp="141" pin=0"/></net>

<net id="146"><net_src comp="76" pin="0"/><net_sink comp="141" pin=1"/></net>

<net id="150"><net_src comp="119" pin="4"/><net_sink comp="147" pin=0"/></net>

<net id="151"><net_src comp="147" pin="1"/><net_sink comp="98" pin=2"/></net>

<net id="158"><net_src comp="141" pin="2"/><net_sink comp="155" pin=0"/></net>

<net id="159"><net_src comp="155" pin="1"/><net_sink comp="119" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: out_strm_V | {2 3 }
 - Input state : 
	Port: example : in1_strm_V | {2 }
	Port: example : in2_strm_V | {2 3 }
  - Chain level:
	State 1
		specmemcore_ln77 : 1
		specmemcore_ln0 : 1
	State 2
		icmp_ln65 : 1
		i : 1
		br_ln65 : 2
		zext_ln68 : 1
		tb_addr : 2
		store_ln68 : 3
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|--------------------|---------|---------|---------|
| Operation|   Functional Unit  |  Delay  |    FF   |   LUT   |
|----------|--------------------|---------|---------|---------|
|   call   | grp_readmem_fu_126 |  5.3985 |   153   |   190   |
|----------|--------------------|---------|---------|---------|
|    add   |      i_fu_141      |    0    |    0    |    13   |
|----------|--------------------|---------|---------|---------|
|   icmp   |  icmp_ln65_fu_135  |    0    |    0    |    9    |
|----------|--------------------|---------|---------|---------|
|   read   |   tmp_read_fu_92   |    0    |    0    |    0    |
|----------|--------------------|---------|---------|---------|
|   zext   |  zext_ln68_fu_147  |    0    |    0    |    0    |
|----------|--------------------|---------|---------|---------|
|   Total  |                    |  5.3985 |   153   |   212   |
|----------|--------------------|---------|---------|---------|

Memories:
+----+--------+--------+--------+--------+
|    |  BRAM  |   FF   |   LUT  |  URAM  |
+----+--------+--------+--------+--------+
| tb |    1   |    0   |    0   |    0   |
+----+--------+--------+--------+--------+
|Total|    1   |    0   |    0   |    0   |
+----+--------+--------+--------+--------+

* Register list:
+-------------+--------+
|             |   FF   |
+-------------+--------+
|i_0_i_reg_115|    4   |
|  i_reg_155  |    4   |
+-------------+--------+
|    Total    |    8   |
+-------------+--------+

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+--------+--------+--------+--------+--------+
|           |  BRAM  |  Delay |   FF   |   LUT  |  URAM  |
+-----------+--------+--------+--------+--------+--------+
|  Function |    -   |    5   |   153  |   212  |    -   |
|   Memory  |    1   |    -   |    0   |    0   |    0   |
|Multiplexer|    -   |    -   |    -   |    -   |    -   |
|  Register |    -   |    -   |    8   |    -   |    -   |
+-----------+--------+--------+--------+--------+--------+
|   Total   |    1   |    5   |   161  |   212  |    0   |
+-----------+--------+--------+--------+--------+--------+
