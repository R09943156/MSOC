

================================================================
== Vivado HLS Report for 'readmem'
================================================================
* Date:           Fri Dec 25 16:44:35 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        proj_stable_content
* Solution:       baseline
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 13.33 ns | 6.888 ns |   1.67 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       42|       42| 0.560 us | 0.560 us |   42|   42|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- A       |       20|       20|         2|          -|          -|    10|    no    |
        |- B       |       20|       20|         2|          -|          -|    10|    no    |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 4 
3 --> 2 
4 --> 5 
5 --> 4 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecInterface(i32* %in_strm_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str25, i32 0, i32 0, [1 x i8]* @p_str26, [1 x i8]* @p_str27, [1 x i8]* @p_str28, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str29, [1 x i8]* @p_str30)"   --->   Operation 6 'specinterface' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %out_strm_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str31, i32 0, i32 0, [1 x i8]* @p_str32, [1 x i8]* @p_str33, [1 x i8]* @p_str34, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str35, [1 x i8]* @p_str36)"   --->   Operation 7 'specinterface' 'empty_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([10 x i32]* %tb, [1 x i8]* @p_str2, [12 x i8]* @p_str4, [1 x i8]* @p_str2, i32 -1, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2)"   --->   Operation 8 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%req_strm_V = alloca i32, align 4" [example.cpp:55]   --->   Operation 9 'alloca' 'req_strm_V' <Predicate = true> <Delay = 0.00> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecChannel([11 x i8]* @req_strm_OC_V_str, i32 1, [1 x i8]* @p_str12, [1 x i8]* @p_str12, i32 4, i32 4, i32* %req_strm_V, i32* %req_strm_V)"   --->   Operation 10 'specchannel' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %req_strm_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str13, i32 0, i32 0, [1 x i8]* @p_str14, [1 x i8]* @p_str15, [1 x i8]* @p_str16, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str17, [1 x i8]* @p_str18)"   --->   Operation 11 'specinterface' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([10 x i32]* %tb, [1 x i8]* @p_str2, [12 x i8]* @p_str4, [1 x i8]* @p_str2, i32 -1, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2)"   --->   Operation 12 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.76ns)   --->   "br label %1" [example.cpp:20->example.cpp:57]   --->   Operation 13 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 6.88>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%i_0_i = phi i4 [ 0, %0 ], [ %i_1, %5 ]"   --->   Operation 14 'phi' 'i_0_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (1.30ns)   --->   "%icmp_ln20 = icmp eq i4 %i_0_i, -6" [example.cpp:20->example.cpp:57]   --->   Operation 15 'icmp' 'icmp_ln20' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 16 'speclooptripcount' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (1.73ns)   --->   "%i_1 = add i4 %i_0_i, 1" [example.cpp:20->example.cpp:57]   --->   Operation 17 'add' 'i_1' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20, label %readmemA.exit, label %2" [example.cpp:20->example.cpp:57]   --->   Operation 18 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (3.63ns)   --->   "%tmp = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %in_strm_V)" [example.cpp:22->example.cpp:57]   --->   Operation 19 'read' 'tmp' <Predicate = (!icmp_ln20)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%sext_ln23 = sext i32 %tmp to i64" [example.cpp:23->example.cpp:57]   --->   Operation 20 'sext' 'sext_ln23' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%tb_addr = getelementptr [10 x i32]* %tb, i64 0, i64 %sext_ln23" [example.cpp:23->example.cpp:57]   --->   Operation 21 'getelementptr' 'tb_addr' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 22 [2/2] (3.25ns)   --->   "%b = load i32* %tb_addr, align 4" [example.cpp:23->example.cpp:57]   --->   Operation 22 'load' 'b' <Predicate = (!icmp_ln20)> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([10 x i32]* %tb, [1 x i8]* @p_str2, [12 x i8]* @p_str4, [1 x i8]* @p_str2, i32 -1, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2)"   --->   Operation 23 'specmemcore' <Predicate = (icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.76ns)   --->   "br label %6" [example.cpp:40->example.cpp:58]   --->   Operation 24 'br' <Predicate = (icmp_ln20)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 5.72>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([2 x i8]* @p_str) nounwind" [example.cpp:21->example.cpp:57]   --->   Operation 25 'specloopname' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 26 [1/2] (3.25ns)   --->   "%b = load i32* %tb_addr, align 4" [example.cpp:23->example.cpp:57]   --->   Operation 26 'load' 'b' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_3 : Operation 27 [1/1] (2.47ns)   --->   "%icmp_ln24 = icmp slt i32 %b, 10" [example.cpp:24->example.cpp:57]   --->   Operation 27 'icmp' 'icmp_ln24' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "br i1 %icmp_ln24, label %3, label %4" [example.cpp:24->example.cpp:57]   --->   Operation 28 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i32P(i32* %req_strm_V, i32 0)" [example.cpp:30->example.cpp:57]   --->   Operation 29 'write' <Predicate = (!icmp_ln24)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "br label %5"   --->   Operation 30 'br' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i32P(i32* %req_strm_V, i32 %tmp)" [example.cpp:26->example.cpp:57]   --->   Operation 31 'write' <Predicate = (icmp_ln24)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "br label %5" [example.cpp:27->example.cpp:57]   --->   Operation 32 'br' <Predicate = (icmp_ln24)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "br label %1" [example.cpp:20->example.cpp:57]   --->   Operation 33 'br' <Predicate = true> <Delay = 0.00>

State 4 <SV = 2> <Delay = 6.88>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_1 = phi i32 [ 0, %readmemA.exit ], [ %sum_1, %_ifconv ]"   --->   Operation 34 'phi' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "%i_0_i2 = phi i4 [ 0, %readmemA.exit ], [ %i, %_ifconv ]"   --->   Operation 35 'phi' 'i_0_i2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 36 [1/1] (1.30ns)   --->   "%icmp_ln40 = icmp eq i4 %i_0_i2, -6" [example.cpp:40->example.cpp:58]   --->   Operation 36 'icmp' 'icmp_ln40' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 37 'speclooptripcount' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 38 [1/1] (1.73ns)   --->   "%i = add i4 %i_0_i2, 1" [example.cpp:40->example.cpp:58]   --->   Operation 38 'add' 'i' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "br i1 %icmp_ln40, label %readmemB.exit, label %_ifconv" [example.cpp:40->example.cpp:58]   --->   Operation 39 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (3.63ns)   --->   "%tmp_3 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %req_strm_V)" [example.cpp:42->example.cpp:58]   --->   Operation 40 'read' 'tmp_3' <Predicate = (!icmp_ln40)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_4 : Operation 41 [1/1] (2.47ns)   --->   "%icmp_ln43 = icmp eq i32 %tmp_3, 0" [example.cpp:43->example.cpp:58]   --->   Operation 41 'icmp' 'icmp_ln43' <Predicate = (!icmp_ln40)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%sext_ln45 = sext i32 %tmp_3 to i64" [example.cpp:45->example.cpp:58]   --->   Operation 42 'sext' 'sext_ln45' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%tb_addr_1 = getelementptr [10 x i32]* %tb, i64 0, i64 %sext_ln45" [example.cpp:45->example.cpp:58]   --->   Operation 43 'getelementptr' 'tb_addr_1' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_4 : Operation 44 [2/2] (3.25ns)   --->   "%b_1 = load i32* %tb_addr_1, align 4" [example.cpp:45->example.cpp:58]   --->   Operation 44 'load' 'b_1' <Predicate = (!icmp_ln40)> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_4 : Operation 45 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i32P(i32* %out_strm_V, i32 %tmp_1)" [example.cpp:49->example.cpp:58]   --->   Operation 45 'write' <Predicate = (icmp_ln40)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "ret void" [example.cpp:59]   --->   Operation 46 'ret' <Predicate = (icmp_ln40)> <Delay = 0.00>

State 5 <SV = 3> <Delay = 6.50>
ST_5 : Operation 47 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([2 x i8]* @p_str1) nounwind" [example.cpp:41->example.cpp:58]   --->   Operation 47 'specloopname' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 48 [1/2] (3.25ns)   --->   "%b_1 = load i32* %tb_addr_1, align 4" [example.cpp:45->example.cpp:58]   --->   Operation 48 'load' 'b_1' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_5 : Operation 49 [1/1] (2.55ns)   --->   "%sum = add nsw i32 %b_1, %tmp_1" [example.cpp:46->example.cpp:58]   --->   Operation 49 'add' 'sum' <Predicate = (!icmp_ln43)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 50 [1/1] (0.69ns)   --->   "%sum_1 = select i1 %icmp_ln43, i32 %tmp_1, i32 %sum" [example.cpp:43->example.cpp:58]   --->   Operation 50 'select' 'sum_1' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 51 [1/1] (0.00ns)   --->   "br label %6" [example.cpp:40->example.cpp:58]   --->   Operation 51 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 13.3ns, clock uncertainty: 1.67ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', example.cpp:20->example.cpp:57) [13]  (1.77 ns)

 <State 2>: 6.89ns
The critical path consists of the following:
	fifo read on port 'in_strm_V' (example.cpp:22->example.cpp:57) [20]  (3.63 ns)
	'getelementptr' operation ('tb_addr', example.cpp:23->example.cpp:57) [22]  (0 ns)
	'load' operation ('b', example.cpp:23->example.cpp:57) on array 'tb' [23]  (3.25 ns)

 <State 3>: 5.73ns
The critical path consists of the following:
	'load' operation ('b', example.cpp:23->example.cpp:57) on array 'tb' [23]  (3.25 ns)
	'icmp' operation ('icmp_ln24', example.cpp:24->example.cpp:57) [24]  (2.47 ns)

 <State 4>: 6.89ns
The critical path consists of the following:
	fifo read on port 'req_strm.V', example.cpp:55 (example.cpp:42->example.cpp:58) [46]  (3.63 ns)
	'getelementptr' operation ('tb_addr_1', example.cpp:45->example.cpp:58) [49]  (0 ns)
	'load' operation ('b', example.cpp:45->example.cpp:58) on array 'tb' [50]  (3.25 ns)

 <State 5>: 6.5ns
The critical path consists of the following:
	'load' operation ('b', example.cpp:45->example.cpp:58) on array 'tb' [50]  (3.25 ns)
	'add' operation ('sum', example.cpp:46->example.cpp:58) [51]  (2.55 ns)
	'select' operation ('sum', example.cpp:43->example.cpp:58) [52]  (0.698 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
