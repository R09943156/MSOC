

================================================================
== Vivado HLS Report for 'readmem'
================================================================
* Date:           Fri Dec 25 17:01:12 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        proj_stable_content
* Solution:       Optimaized
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  | 13.33 ns | 10.138 ns |   1.67 ns  |
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+----------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline |
    |   min   |   max   |    min   |    max   | min | max |   Type   |
    +---------+---------+----------+----------+-----+-----+----------+
    |       22|       22| 0.293 us | 0.293 us |   10|   10| dataflow |
    +---------+---------+----------+----------+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 23
* Pipeline : 0
* Dataflow Pipeline: 1
  DF-Pipeline-0: Size = 23, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 }

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%req_strm_V = alloca i32, align 4" [example.cpp:57]   --->   Operation 24 'alloca' 'req_strm_V' <Predicate = true> <Delay = 0.00> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_1 : Operation 25 [12/12] (0.00ns)   --->   "call fastcc void @readmemA(i32* %in_strm_V, i32* %req_strm_V, [10 x i32]* %tb)" [example.cpp:61]   --->   Operation 25 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 26 [11/12] (0.00ns)   --->   "call fastcc void @readmemA(i32* %in_strm_V, i32* %req_strm_V, [10 x i32]* %tb)" [example.cpp:61]   --->   Operation 26 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 27 [10/12] (0.00ns)   --->   "call fastcc void @readmemA(i32* %in_strm_V, i32* %req_strm_V, [10 x i32]* %tb)" [example.cpp:61]   --->   Operation 27 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 28 [9/12] (0.00ns)   --->   "call fastcc void @readmemA(i32* %in_strm_V, i32* %req_strm_V, [10 x i32]* %tb)" [example.cpp:61]   --->   Operation 28 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 29 [8/12] (0.00ns)   --->   "call fastcc void @readmemA(i32* %in_strm_V, i32* %req_strm_V, [10 x i32]* %tb)" [example.cpp:61]   --->   Operation 29 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 0.00>
ST_6 : Operation 30 [7/12] (0.00ns)   --->   "call fastcc void @readmemA(i32* %in_strm_V, i32* %req_strm_V, [10 x i32]* %tb)" [example.cpp:61]   --->   Operation 30 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 0.00>
ST_7 : Operation 31 [6/12] (0.00ns)   --->   "call fastcc void @readmemA(i32* %in_strm_V, i32* %req_strm_V, [10 x i32]* %tb)" [example.cpp:61]   --->   Operation 31 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 0.00>
ST_8 : Operation 32 [5/12] (0.00ns)   --->   "call fastcc void @readmemA(i32* %in_strm_V, i32* %req_strm_V, [10 x i32]* %tb)" [example.cpp:61]   --->   Operation 32 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 0.00>
ST_9 : Operation 33 [4/12] (0.00ns)   --->   "call fastcc void @readmemA(i32* %in_strm_V, i32* %req_strm_V, [10 x i32]* %tb)" [example.cpp:61]   --->   Operation 33 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 34 [3/12] (0.00ns)   --->   "call fastcc void @readmemA(i32* %in_strm_V, i32* %req_strm_V, [10 x i32]* %tb)" [example.cpp:61]   --->   Operation 34 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 0.00>
ST_11 : Operation 35 [2/12] (0.00ns)   --->   "call fastcc void @readmemA(i32* %in_strm_V, i32* %req_strm_V, [10 x i32]* %tb)" [example.cpp:61]   --->   Operation 35 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 0.00>
ST_12 : Operation 36 [1/12] (0.00ns)   --->   "call fastcc void @readmemA(i32* %in_strm_V, i32* %req_strm_V, [10 x i32]* %tb)" [example.cpp:61]   --->   Operation 36 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 12> <Delay = 0.00>
ST_13 : Operation 37 [11/11] (0.00ns)   --->   "call fastcc void @readmemB(i32* %req_strm_V, i32* %out_strm_V, [10 x i32]* %tb)" [example.cpp:62]   --->   Operation 37 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 13> <Delay = 0.00>
ST_14 : Operation 38 [10/11] (0.00ns)   --->   "call fastcc void @readmemB(i32* %req_strm_V, i32* %out_strm_V, [10 x i32]* %tb)" [example.cpp:62]   --->   Operation 38 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 14> <Delay = 0.00>
ST_15 : Operation 39 [9/11] (0.00ns)   --->   "call fastcc void @readmemB(i32* %req_strm_V, i32* %out_strm_V, [10 x i32]* %tb)" [example.cpp:62]   --->   Operation 39 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 15> <Delay = 0.00>
ST_16 : Operation 40 [8/11] (0.00ns)   --->   "call fastcc void @readmemB(i32* %req_strm_V, i32* %out_strm_V, [10 x i32]* %tb)" [example.cpp:62]   --->   Operation 40 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 16> <Delay = 0.00>
ST_17 : Operation 41 [7/11] (0.00ns)   --->   "call fastcc void @readmemB(i32* %req_strm_V, i32* %out_strm_V, [10 x i32]* %tb)" [example.cpp:62]   --->   Operation 41 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 17> <Delay = 0.00>
ST_18 : Operation 42 [6/11] (0.00ns)   --->   "call fastcc void @readmemB(i32* %req_strm_V, i32* %out_strm_V, [10 x i32]* %tb)" [example.cpp:62]   --->   Operation 42 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 19 <SV = 18> <Delay = 0.00>
ST_19 : Operation 43 [5/11] (0.00ns)   --->   "call fastcc void @readmemB(i32* %req_strm_V, i32* %out_strm_V, [10 x i32]* %tb)" [example.cpp:62]   --->   Operation 43 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 20 <SV = 19> <Delay = 0.00>
ST_20 : Operation 44 [4/11] (0.00ns)   --->   "call fastcc void @readmemB(i32* %req_strm_V, i32* %out_strm_V, [10 x i32]* %tb)" [example.cpp:62]   --->   Operation 44 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 20> <Delay = 0.00>
ST_21 : Operation 45 [3/11] (0.00ns)   --->   "call fastcc void @readmemB(i32* %req_strm_V, i32* %out_strm_V, [10 x i32]* %tb)" [example.cpp:62]   --->   Operation 45 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 0.00>
ST_22 : Operation 46 [2/11] (0.00ns)   --->   "call fastcc void @readmemB(i32* %req_strm_V, i32* %out_strm_V, [10 x i32]* %tb)" [example.cpp:62]   --->   Operation 46 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 23 <SV = 22> <Delay = 0.00>
ST_23 : Operation 47 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecInterface(i32* %in_strm_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 47 'specinterface' 'empty' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 48 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %out_strm_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 48 'specinterface' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 49 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecDataflowPipeline(i32 -1, i32 0, [1 x i8]* @p_str) nounwind" [example.cpp:59]   --->   Operation 49 'specdataflowpipeline' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 50 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([10 x i32]* %tb, [1 x i8]* @p_str, [12 x i8]* @p_str4, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 50 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 51 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecChannel([11 x i8]* @req_strm_OC_V_str, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 4, i32 4, i32* %req_strm_V, i32* %req_strm_V)"   --->   Operation 51 'specchannel' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 52 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %req_strm_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 52 'specinterface' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 53 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecStableContent([10 x i32]* %tb) nounwind" [example.cpp:60]   --->   Operation 53 'specstablecontent' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 54 [1/11] (0.00ns)   --->   "call fastcc void @readmemB(i32* %req_strm_V, i32* %out_strm_V, [10 x i32]* %tb)" [example.cpp:62]   --->   Operation 54 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_23 : Operation 55 [1/1] (0.00ns)   --->   "ret void" [example.cpp:63]   --->   Operation 55 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 13.3ns, clock uncertainty: 1.67ns.

 <State 1>: 0ns
The critical path consists of the following:

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 0ns
The critical path consists of the following:

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 0ns
The critical path consists of the following:

 <State 6>: 0ns
The critical path consists of the following:

 <State 7>: 0ns
The critical path consists of the following:

 <State 8>: 0ns
The critical path consists of the following:

 <State 9>: 0ns
The critical path consists of the following:

 <State 10>: 0ns
The critical path consists of the following:

 <State 11>: 0ns
The critical path consists of the following:

 <State 12>: 0ns
The critical path consists of the following:

 <State 13>: 0ns
The critical path consists of the following:

 <State 14>: 0ns
The critical path consists of the following:

 <State 15>: 0ns
The critical path consists of the following:

 <State 16>: 0ns
The critical path consists of the following:

 <State 17>: 0ns
The critical path consists of the following:

 <State 18>: 0ns
The critical path consists of the following:

 <State 19>: 0ns
The critical path consists of the following:

 <State 20>: 0ns
The critical path consists of the following:

 <State 21>: 0ns
The critical path consists of the following:

 <State 22>: 0ns
The critical path consists of the following:

 <State 23>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
