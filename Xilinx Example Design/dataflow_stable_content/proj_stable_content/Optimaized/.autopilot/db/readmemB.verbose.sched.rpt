

================================================================
== Vivado HLS Report for 'readmemB'
================================================================
* Date:           Fri Dec 25 17:01:12 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        proj_stable_content
* Solution:       Optimaized
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  | 13.33 ns | 10.138 ns |   1.67 ns  |
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+----------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline |
    |   min   |   max   |    min   |    max   | min | max |   Type   |
    +---------+---------+----------+----------+-----+-----+----------+
    |       10|       10| 0.133 us | 0.133 us |   10|   10| function |
    +---------+---------+----------+----------+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 10, depth = 11


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 1
  Pipeline-0 : II = 10, D = 11, States = { 1 2 3 4 5 6 7 8 9 10 11 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.88>
ST_1 : Operation 12 [1/1] (3.63ns)   --->   "%tmp = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %req_strm_V)" [example.cpp:44]   --->   Operation 12 'read' 'tmp' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%sext_ln47 = sext i32 %tmp to i64" [example.cpp:47]   --->   Operation 13 'sext' 'sext_ln47' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%tb_addr = getelementptr [10 x i32]* %tb, i64 0, i64 %sext_ln47" [example.cpp:47]   --->   Operation 14 'getelementptr' 'tb_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [2/2] (3.25ns)   --->   "%tb_load = load i32* %tb_addr, align 4" [example.cpp:47]   --->   Operation 15 'load' 'tb_load' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 2 <SV = 1> <Delay = 6.88>
ST_2 : Operation 16 [1/2] (3.25ns)   --->   "%tb_load = load i32* %tb_addr, align 4" [example.cpp:47]   --->   Operation 16 'load' 'tb_load' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_2 : Operation 17 [1/1] (3.63ns)   --->   "%tmp_1 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %req_strm_V)" [example.cpp:44]   --->   Operation 17 'read' 'tmp_1' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%sext_ln47_1 = sext i32 %tmp_1 to i64" [example.cpp:47]   --->   Operation 18 'sext' 'sext_ln47_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%tb_addr_1 = getelementptr [10 x i32]* %tb, i64 0, i64 %sext_ln47_1" [example.cpp:47]   --->   Operation 19 'getelementptr' 'tb_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [2/2] (3.25ns)   --->   "%tb_load_1 = load i32* %tb_addr_1, align 4" [example.cpp:47]   --->   Operation 20 'load' 'tb_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 3 <SV = 2> <Delay = 6.88>
ST_3 : Operation 21 [1/1] (2.47ns)   --->   "%icmp_ln45 = icmp eq i32 %tmp, 0" [example.cpp:45]   --->   Operation 21 'icmp' 'icmp_ln45' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 22 [1/1] (0.69ns)   --->   "%select_ln45 = select i1 %icmp_ln45, i32 0, i32 %tb_load" [example.cpp:45]   --->   Operation 22 'select' 'select_ln45' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 23 [1/1] (2.47ns)   --->   "%icmp_ln45_1 = icmp eq i32 %tmp_1, 0" [example.cpp:45]   --->   Operation 23 'icmp' 'icmp_ln45_1' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 24 [1/2] (3.25ns)   --->   "%tb_load_1 = load i32* %tb_addr_1, align 4" [example.cpp:47]   --->   Operation 24 'load' 'tb_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_3 : Operation 25 [1/1] (2.55ns)   --->   "%add_ln48 = add nsw i32 %tb_load_1, %select_ln45" [example.cpp:48]   --->   Operation 25 'add' 'add_ln48' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 26 [1/1] (0.69ns)   --->   "%select_ln45_1 = select i1 %icmp_ln45_1, i32 %select_ln45, i32 %add_ln48" [example.cpp:45]   --->   Operation 26 'select' 'select_ln45_1' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 27 [1/1] (3.63ns)   --->   "%tmp_2 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %req_strm_V)" [example.cpp:44]   --->   Operation 27 'read' 'tmp_2' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%sext_ln47_2 = sext i32 %tmp_2 to i64" [example.cpp:47]   --->   Operation 28 'sext' 'sext_ln47_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%tb_addr_2 = getelementptr [10 x i32]* %tb, i64 0, i64 %sext_ln47_2" [example.cpp:47]   --->   Operation 29 'getelementptr' 'tb_addr_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [2/2] (3.25ns)   --->   "%tb_load_2 = load i32* %tb_addr_2, align 4" [example.cpp:47]   --->   Operation 30 'load' 'tb_load_2' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 4 <SV = 3> <Delay = 6.88>
ST_4 : Operation 31 [1/1] (2.47ns)   --->   "%icmp_ln45_2 = icmp eq i32 %tmp_2, 0" [example.cpp:45]   --->   Operation 31 'icmp' 'icmp_ln45_2' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 32 [1/2] (3.25ns)   --->   "%tb_load_2 = load i32* %tb_addr_2, align 4" [example.cpp:47]   --->   Operation 32 'load' 'tb_load_2' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_4 : Operation 33 [1/1] (2.55ns)   --->   "%add_ln48_1 = add nsw i32 %tb_load_2, %select_ln45_1" [example.cpp:48]   --->   Operation 33 'add' 'add_ln48_1' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 34 [1/1] (0.69ns)   --->   "%select_ln45_2 = select i1 %icmp_ln45_2, i32 %select_ln45_1, i32 %add_ln48_1" [example.cpp:45]   --->   Operation 34 'select' 'select_ln45_2' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 35 [1/1] (3.63ns)   --->   "%tmp_3 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %req_strm_V)" [example.cpp:44]   --->   Operation 35 'read' 'tmp_3' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "%sext_ln47_3 = sext i32 %tmp_3 to i64" [example.cpp:47]   --->   Operation 36 'sext' 'sext_ln47_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "%tb_addr_3 = getelementptr [10 x i32]* %tb, i64 0, i64 %sext_ln47_3" [example.cpp:47]   --->   Operation 37 'getelementptr' 'tb_addr_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 38 [2/2] (3.25ns)   --->   "%tb_load_3 = load i32* %tb_addr_3, align 4" [example.cpp:47]   --->   Operation 38 'load' 'tb_load_3' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 5 <SV = 4> <Delay = 6.88>
ST_5 : Operation 39 [1/1] (2.47ns)   --->   "%icmp_ln45_3 = icmp eq i32 %tmp_3, 0" [example.cpp:45]   --->   Operation 39 'icmp' 'icmp_ln45_3' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 40 [1/2] (3.25ns)   --->   "%tb_load_3 = load i32* %tb_addr_3, align 4" [example.cpp:47]   --->   Operation 40 'load' 'tb_load_3' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_5 : Operation 41 [1/1] (2.55ns)   --->   "%add_ln48_2 = add nsw i32 %tb_load_3, %select_ln45_2" [example.cpp:48]   --->   Operation 41 'add' 'add_ln48_2' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 42 [1/1] (0.69ns)   --->   "%select_ln45_3 = select i1 %icmp_ln45_3, i32 %select_ln45_2, i32 %add_ln48_2" [example.cpp:45]   --->   Operation 42 'select' 'select_ln45_3' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 43 [1/1] (3.63ns)   --->   "%tmp_4 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %req_strm_V)" [example.cpp:44]   --->   Operation 43 'read' 'tmp_4' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_5 : Operation 44 [1/1] (0.00ns)   --->   "%sext_ln47_4 = sext i32 %tmp_4 to i64" [example.cpp:47]   --->   Operation 44 'sext' 'sext_ln47_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 45 [1/1] (0.00ns)   --->   "%tb_addr_4 = getelementptr [10 x i32]* %tb, i64 0, i64 %sext_ln47_4" [example.cpp:47]   --->   Operation 45 'getelementptr' 'tb_addr_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 46 [2/2] (3.25ns)   --->   "%tb_load_4 = load i32* %tb_addr_4, align 4" [example.cpp:47]   --->   Operation 46 'load' 'tb_load_4' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 6 <SV = 5> <Delay = 6.88>
ST_6 : Operation 47 [1/1] (2.47ns)   --->   "%icmp_ln45_4 = icmp eq i32 %tmp_4, 0" [example.cpp:45]   --->   Operation 47 'icmp' 'icmp_ln45_4' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 48 [1/2] (3.25ns)   --->   "%tb_load_4 = load i32* %tb_addr_4, align 4" [example.cpp:47]   --->   Operation 48 'load' 'tb_load_4' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_6 : Operation 49 [1/1] (2.55ns)   --->   "%add_ln48_3 = add nsw i32 %tb_load_4, %select_ln45_3" [example.cpp:48]   --->   Operation 49 'add' 'add_ln48_3' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 50 [1/1] (0.69ns)   --->   "%select_ln45_4 = select i1 %icmp_ln45_4, i32 %select_ln45_3, i32 %add_ln48_3" [example.cpp:45]   --->   Operation 50 'select' 'select_ln45_4' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 51 [1/1] (3.63ns)   --->   "%tmp_5 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %req_strm_V)" [example.cpp:44]   --->   Operation 51 'read' 'tmp_5' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_6 : Operation 52 [1/1] (0.00ns)   --->   "%sext_ln47_5 = sext i32 %tmp_5 to i64" [example.cpp:47]   --->   Operation 52 'sext' 'sext_ln47_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 53 [1/1] (0.00ns)   --->   "%tb_addr_5 = getelementptr [10 x i32]* %tb, i64 0, i64 %sext_ln47_5" [example.cpp:47]   --->   Operation 53 'getelementptr' 'tb_addr_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 54 [2/2] (3.25ns)   --->   "%tb_load_5 = load i32* %tb_addr_5, align 4" [example.cpp:47]   --->   Operation 54 'load' 'tb_load_5' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 7 <SV = 6> <Delay = 6.88>
ST_7 : Operation 55 [1/1] (2.47ns)   --->   "%icmp_ln45_5 = icmp eq i32 %tmp_5, 0" [example.cpp:45]   --->   Operation 55 'icmp' 'icmp_ln45_5' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 56 [1/2] (3.25ns)   --->   "%tb_load_5 = load i32* %tb_addr_5, align 4" [example.cpp:47]   --->   Operation 56 'load' 'tb_load_5' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_7 : Operation 57 [1/1] (2.55ns)   --->   "%add_ln48_4 = add nsw i32 %tb_load_5, %select_ln45_4" [example.cpp:48]   --->   Operation 57 'add' 'add_ln48_4' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 58 [1/1] (0.69ns)   --->   "%select_ln45_5 = select i1 %icmp_ln45_5, i32 %select_ln45_4, i32 %add_ln48_4" [example.cpp:45]   --->   Operation 58 'select' 'select_ln45_5' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 59 [1/1] (3.63ns)   --->   "%tmp_6 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %req_strm_V)" [example.cpp:44]   --->   Operation 59 'read' 'tmp_6' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_7 : Operation 60 [1/1] (0.00ns)   --->   "%sext_ln47_6 = sext i32 %tmp_6 to i64" [example.cpp:47]   --->   Operation 60 'sext' 'sext_ln47_6' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 61 [1/1] (0.00ns)   --->   "%tb_addr_6 = getelementptr [10 x i32]* %tb, i64 0, i64 %sext_ln47_6" [example.cpp:47]   --->   Operation 61 'getelementptr' 'tb_addr_6' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 62 [2/2] (3.25ns)   --->   "%tb_load_6 = load i32* %tb_addr_6, align 4" [example.cpp:47]   --->   Operation 62 'load' 'tb_load_6' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 8 <SV = 7> <Delay = 6.88>
ST_8 : Operation 63 [1/1] (2.47ns)   --->   "%icmp_ln45_6 = icmp eq i32 %tmp_6, 0" [example.cpp:45]   --->   Operation 63 'icmp' 'icmp_ln45_6' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 64 [1/2] (3.25ns)   --->   "%tb_load_6 = load i32* %tb_addr_6, align 4" [example.cpp:47]   --->   Operation 64 'load' 'tb_load_6' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_8 : Operation 65 [1/1] (2.55ns)   --->   "%add_ln48_5 = add nsw i32 %tb_load_6, %select_ln45_5" [example.cpp:48]   --->   Operation 65 'add' 'add_ln48_5' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 66 [1/1] (0.69ns)   --->   "%select_ln45_6 = select i1 %icmp_ln45_6, i32 %select_ln45_5, i32 %add_ln48_5" [example.cpp:45]   --->   Operation 66 'select' 'select_ln45_6' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 67 [1/1] (3.63ns)   --->   "%tmp_7 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %req_strm_V)" [example.cpp:44]   --->   Operation 67 'read' 'tmp_7' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_8 : Operation 68 [1/1] (0.00ns)   --->   "%sext_ln47_7 = sext i32 %tmp_7 to i64" [example.cpp:47]   --->   Operation 68 'sext' 'sext_ln47_7' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 69 [1/1] (0.00ns)   --->   "%tb_addr_7 = getelementptr [10 x i32]* %tb, i64 0, i64 %sext_ln47_7" [example.cpp:47]   --->   Operation 69 'getelementptr' 'tb_addr_7' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 70 [2/2] (3.25ns)   --->   "%tb_load_7 = load i32* %tb_addr_7, align 4" [example.cpp:47]   --->   Operation 70 'load' 'tb_load_7' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 9 <SV = 8> <Delay = 6.88>
ST_9 : Operation 71 [1/1] (2.47ns)   --->   "%icmp_ln45_7 = icmp eq i32 %tmp_7, 0" [example.cpp:45]   --->   Operation 71 'icmp' 'icmp_ln45_7' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 72 [1/2] (3.25ns)   --->   "%tb_load_7 = load i32* %tb_addr_7, align 4" [example.cpp:47]   --->   Operation 72 'load' 'tb_load_7' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_9 : Operation 73 [1/1] (2.55ns)   --->   "%add_ln48_6 = add nsw i32 %tb_load_7, %select_ln45_6" [example.cpp:48]   --->   Operation 73 'add' 'add_ln48_6' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 74 [1/1] (0.69ns)   --->   "%select_ln45_7 = select i1 %icmp_ln45_7, i32 %select_ln45_6, i32 %add_ln48_6" [example.cpp:45]   --->   Operation 74 'select' 'select_ln45_7' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 75 [1/1] (3.63ns)   --->   "%tmp_8 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %req_strm_V)" [example.cpp:44]   --->   Operation 75 'read' 'tmp_8' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_9 : Operation 76 [1/1] (0.00ns)   --->   "%sext_ln47_8 = sext i32 %tmp_8 to i64" [example.cpp:47]   --->   Operation 76 'sext' 'sext_ln47_8' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 77 [1/1] (0.00ns)   --->   "%tb_addr_8 = getelementptr [10 x i32]* %tb, i64 0, i64 %sext_ln47_8" [example.cpp:47]   --->   Operation 77 'getelementptr' 'tb_addr_8' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 78 [2/2] (3.25ns)   --->   "%tb_load_8 = load i32* %tb_addr_8, align 4" [example.cpp:47]   --->   Operation 78 'load' 'tb_load_8' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 10 <SV = 9> <Delay = 6.88>
ST_10 : Operation 79 [1/1] (2.47ns)   --->   "%icmp_ln45_8 = icmp eq i32 %tmp_8, 0" [example.cpp:45]   --->   Operation 79 'icmp' 'icmp_ln45_8' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 80 [1/2] (3.25ns)   --->   "%tb_load_8 = load i32* %tb_addr_8, align 4" [example.cpp:47]   --->   Operation 80 'load' 'tb_load_8' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_10 : Operation 81 [1/1] (2.55ns)   --->   "%add_ln48_7 = add nsw i32 %tb_load_8, %select_ln45_7" [example.cpp:48]   --->   Operation 81 'add' 'add_ln48_7' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 82 [1/1] (0.69ns)   --->   "%select_ln45_8 = select i1 %icmp_ln45_8, i32 %select_ln45_7, i32 %add_ln48_7" [example.cpp:45]   --->   Operation 82 'select' 'select_ln45_8' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 83 [1/1] (3.63ns)   --->   "%tmp_9 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %req_strm_V)" [example.cpp:44]   --->   Operation 83 'read' 'tmp_9' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_10 : Operation 84 [1/1] (0.00ns)   --->   "%sext_ln47_9 = sext i32 %tmp_9 to i64" [example.cpp:47]   --->   Operation 84 'sext' 'sext_ln47_9' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 85 [1/1] (0.00ns)   --->   "%tb_addr_9 = getelementptr [10 x i32]* %tb, i64 0, i64 %sext_ln47_9" [example.cpp:47]   --->   Operation 85 'getelementptr' 'tb_addr_9' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 86 [2/2] (3.25ns)   --->   "%tb_load_9 = load i32* %tb_addr_9, align 4" [example.cpp:47]   --->   Operation 86 'load' 'tb_load_9' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 11 <SV = 10> <Delay = 10.1>
ST_11 : Operation 87 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecInterface(i32* %req_strm_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 87 'specinterface' 'empty' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 88 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %out_strm_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 88 'specinterface' 'empty_4' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 89 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecStableContent([10 x i32]* %tb) nounwind"   --->   Operation 89 'specstablecontent' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 90 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([10 x i32]* %tb, [1 x i8]* @p_str, [12 x i8]* @p_str4, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 90 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 91 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [example.cpp:39]   --->   Operation 91 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 92 [1/1] (2.47ns)   --->   "%icmp_ln45_9 = icmp eq i32 %tmp_9, 0" [example.cpp:45]   --->   Operation 92 'icmp' 'icmp_ln45_9' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 93 [1/2] (3.25ns)   --->   "%tb_load_9 = load i32* %tb_addr_9, align 4" [example.cpp:47]   --->   Operation 93 'load' 'tb_load_9' <Predicate = true> <Delay = 3.25> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_11 : Operation 94 [1/1] (2.55ns)   --->   "%add_ln48_8 = add nsw i32 %tb_load_9, %select_ln45_8" [example.cpp:48]   --->   Operation 94 'add' 'add_ln48_8' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 95 [1/1] (0.69ns)   --->   "%tmp_10 = select i1 %icmp_ln45_9, i32 %select_ln45_8, i32 %add_ln48_8" [example.cpp:45]   --->   Operation 95 'select' 'tmp_10' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 96 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i32P(i32* %out_strm_V, i32 %tmp_10)" [example.cpp:51]   --->   Operation 96 'write' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 4> <FIFO>
ST_11 : Operation 97 [1/1] (0.00ns)   --->   "ret void" [example.cpp:52]   --->   Operation 97 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 13.3ns, clock uncertainty: 1.67ns.

 <State 1>: 6.89ns
The critical path consists of the following:
	fifo read on port 'req_strm_V' (example.cpp:44) [9]  (3.63 ns)
	'getelementptr' operation ('tb_addr', example.cpp:47) [12]  (0 ns)
	'load' operation ('tb_load', example.cpp:47) on array 'tb' [13]  (3.25 ns)

 <State 2>: 6.89ns
The critical path consists of the following:
	fifo read on port 'req_strm_V' (example.cpp:44) [15]  (3.63 ns)
	'getelementptr' operation ('tb_addr_1', example.cpp:47) [18]  (0 ns)
	'load' operation ('tb_load_1', example.cpp:47) on array 'tb' [19]  (3.25 ns)

 <State 3>: 6.89ns
The critical path consists of the following:
	fifo read on port 'req_strm_V' (example.cpp:44) [22]  (3.63 ns)
	'getelementptr' operation ('tb_addr_2', example.cpp:47) [25]  (0 ns)
	'load' operation ('tb_load_2', example.cpp:47) on array 'tb' [26]  (3.25 ns)

 <State 4>: 6.89ns
The critical path consists of the following:
	fifo read on port 'req_strm_V' (example.cpp:44) [29]  (3.63 ns)
	'getelementptr' operation ('tb_addr_3', example.cpp:47) [32]  (0 ns)
	'load' operation ('tb_load_3', example.cpp:47) on array 'tb' [33]  (3.25 ns)

 <State 5>: 6.89ns
The critical path consists of the following:
	fifo read on port 'req_strm_V' (example.cpp:44) [36]  (3.63 ns)
	'getelementptr' operation ('tb_addr_4', example.cpp:47) [39]  (0 ns)
	'load' operation ('tb_load_4', example.cpp:47) on array 'tb' [40]  (3.25 ns)

 <State 6>: 6.89ns
The critical path consists of the following:
	fifo read on port 'req_strm_V' (example.cpp:44) [43]  (3.63 ns)
	'getelementptr' operation ('tb_addr_5', example.cpp:47) [46]  (0 ns)
	'load' operation ('tb_load_5', example.cpp:47) on array 'tb' [47]  (3.25 ns)

 <State 7>: 6.89ns
The critical path consists of the following:
	fifo read on port 'req_strm_V' (example.cpp:44) [50]  (3.63 ns)
	'getelementptr' operation ('tb_addr_6', example.cpp:47) [53]  (0 ns)
	'load' operation ('tb_load_6', example.cpp:47) on array 'tb' [54]  (3.25 ns)

 <State 8>: 6.89ns
The critical path consists of the following:
	fifo read on port 'req_strm_V' (example.cpp:44) [57]  (3.63 ns)
	'getelementptr' operation ('tb_addr_7', example.cpp:47) [60]  (0 ns)
	'load' operation ('tb_load_7', example.cpp:47) on array 'tb' [61]  (3.25 ns)

 <State 9>: 6.89ns
The critical path consists of the following:
	fifo read on port 'req_strm_V' (example.cpp:44) [64]  (3.63 ns)
	'getelementptr' operation ('tb_addr_8', example.cpp:47) [67]  (0 ns)
	'load' operation ('tb_load_8', example.cpp:47) on array 'tb' [68]  (3.25 ns)

 <State 10>: 6.89ns
The critical path consists of the following:
	fifo read on port 'req_strm_V' (example.cpp:44) [71]  (3.63 ns)
	'getelementptr' operation ('tb_addr_9', example.cpp:47) [74]  (0 ns)
	'load' operation ('tb_load_9', example.cpp:47) on array 'tb' [75]  (3.25 ns)

 <State 11>: 10.1ns
The critical path consists of the following:
	'load' operation ('tb_load_9', example.cpp:47) on array 'tb' [75]  (3.25 ns)
	'add' operation ('add_ln48_8', example.cpp:48) [76]  (2.55 ns)
	'select' operation ('tmp', example.cpp:45) [77]  (0.698 ns)
	fifo write on port 'out_strm_V' (example.cpp:51) [78]  (3.63 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
