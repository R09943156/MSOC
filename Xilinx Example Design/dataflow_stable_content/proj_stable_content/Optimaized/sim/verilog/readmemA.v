// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module readmemA (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        req_strm_V_din,
        req_strm_V_full_n,
        req_strm_V_write,
        in_strm_V_dout,
        in_strm_V_empty_n,
        in_strm_V_read,
        start_out,
        start_write,
        tb_address0,
        tb_ce0,
        tb_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 10'd1;
parameter    ap_ST_fsm_pp0_stage1 = 10'd2;
parameter    ap_ST_fsm_pp0_stage2 = 10'd4;
parameter    ap_ST_fsm_pp0_stage3 = 10'd8;
parameter    ap_ST_fsm_pp0_stage4 = 10'd16;
parameter    ap_ST_fsm_pp0_stage5 = 10'd32;
parameter    ap_ST_fsm_pp0_stage6 = 10'd64;
parameter    ap_ST_fsm_pp0_stage7 = 10'd128;
parameter    ap_ST_fsm_pp0_stage8 = 10'd256;
parameter    ap_ST_fsm_pp0_stage9 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [31:0] req_strm_V_din;
input   req_strm_V_full_n;
output   req_strm_V_write;
input  [31:0] in_strm_V_dout;
input   in_strm_V_empty_n;
output   in_strm_V_read;
output   start_out;
output   start_write;
output  [3:0] tb_address0;
output   tb_ce0;
input  [31:0] tb_q0;

reg ap_done;
reg ap_idle;
reg[31:0] req_strm_V_din;
reg req_strm_V_write;
reg in_strm_V_read;
reg start_write;
reg[3:0] tb_address0;
reg tb_ce0;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    internal_ap_ready;
wire    ap_CS_fsm_pp0_stage9;
reg   [0:0] icmp_ln25_7_reg_271;
reg    ap_block_state10_pp0_stage9_iter0;
reg    ap_block_pp0_stage9_11001;
reg    in_strm_V_blk_n;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
reg    req_strm_V_blk_n;
reg   [0:0] icmp_ln25_reg_208;
reg   [0:0] icmp_ln25_1_reg_217;
reg   [0:0] icmp_ln25_2_reg_226;
reg   [0:0] icmp_ln25_3_reg_235;
reg   [0:0] icmp_ln25_4_reg_244;
reg   [0:0] icmp_ln25_5_reg_253;
reg   [0:0] icmp_ln25_6_reg_262;
reg   [0:0] icmp_ln25_8_reg_280;
reg   [0:0] icmp_ln25_9_reg_289;
reg  signed [31:0] reg_143;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state11_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_state9_pp0_stage8_iter0;
reg    ap_block_pp0_stage8_11001;
reg  signed [31:0] reg_148;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state12_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_11001;
wire   [0:0] grp_fu_137_p2;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage9_subdone;
wire  signed [63:0] sext_ln24_fu_153_p1;
wire  signed [63:0] sext_ln24_1_fu_158_p1;
wire  signed [63:0] sext_ln24_2_fu_163_p1;
wire  signed [63:0] sext_ln24_3_fu_168_p1;
wire  signed [63:0] sext_ln24_4_fu_173_p1;
wire  signed [63:0] sext_ln24_5_fu_178_p1;
wire  signed [63:0] sext_ln24_6_fu_183_p1;
wire  signed [63:0] sext_ln24_7_fu_188_p1;
wire  signed [63:0] sext_ln24_8_fu_193_p1;
wire  signed [63:0] sext_ln24_9_fu_198_p1;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_pp0_stage3_01001;
reg    ap_block_pp0_stage4_01001;
reg    ap_block_pp0_stage5_01001;
reg    ap_block_pp0_stage6_01001;
reg    ap_block_pp0_stage7_01001;
reg    ap_block_pp0_stage8_01001;
reg    ap_block_pp0_stage9_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage1_01001;
wire  signed [31:0] sext_ln24_fu_153_p0;
wire  signed [31:0] sext_ln24_1_fu_158_p0;
wire  signed [31:0] sext_ln24_2_fu_163_p0;
wire  signed [31:0] sext_ln24_3_fu_168_p0;
wire  signed [31:0] sext_ln24_4_fu_173_p0;
wire  signed [31:0] sext_ln24_5_fu_178_p0;
wire  signed [31:0] sext_ln24_6_fu_183_p0;
wire  signed [31:0] sext_ln24_7_fu_188_p0;
wire  signed [31:0] sext_ln24_8_fu_193_p0;
wire  signed [31:0] sext_ln24_9_fu_198_p0;
reg   [9:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= real_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        icmp_ln25_1_reg_217 <= grp_fu_137_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        icmp_ln25_2_reg_226 <= grp_fu_137_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        icmp_ln25_3_reg_235 <= grp_fu_137_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        icmp_ln25_4_reg_244 <= grp_fu_137_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        icmp_ln25_5_reg_253 <= grp_fu_137_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        icmp_ln25_6_reg_262 <= grp_fu_137_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        icmp_ln25_7_reg_271 <= grp_fu_137_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        icmp_ln25_8_reg_280 <= grp_fu_137_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln25_9_reg_289 <= grp_fu_137_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln25_reg_208 <= grp_fu_137_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_143 <= in_strm_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_148 <= in_strm_V_dout;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = real_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_strm_V_blk_n = in_strm_V_empty_n;
    end else begin
        in_strm_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_strm_V_read = 1'b1;
    end else begin
        in_strm_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((((icmp_ln25_6_reg_262 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((icmp_ln25_6_reg_262 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((icmp_ln25_5_reg_253 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((icmp_ln25_5_reg_253 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((icmp_ln25_4_reg_244 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((icmp_ln25_4_reg_244 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((icmp_ln25_3_reg_235 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((icmp_ln25_3_reg_235 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((icmp_ln25_2_reg_226 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((icmp_ln25_2_reg_226 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((icmp_ln25_1_reg_217 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((icmp_ln25_1_reg_217 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((icmp_ln25_reg_208 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((icmp_ln25_reg_208 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((icmp_ln25_7_reg_271 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9)) | ((icmp_ln25_7_reg_271 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage0) & (icmp_ln25_8_reg_280 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (icmp_ln25_8_reg_280 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln25_9_reg_289 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((icmp_ln25_9_reg_289 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        req_strm_V_blk_n = req_strm_V_full_n;
    end else begin
        req_strm_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln25_5_reg_253 == 1'd1) & (1'b0 == ap_block_pp0_stage7_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln25_3_reg_235 == 1'd1) & (1'b0 == ap_block_pp0_stage5_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln25_1_reg_217 == 1'd1) & (1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln25_7_reg_271 == 1'd1) & (1'b0 == ap_block_pp0_stage9_01001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln25_9_reg_289 == 1'd1) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        req_strm_V_din = reg_148;
    end else if ((((icmp_ln25_6_reg_262 == 1'd1) & (1'b0 == ap_block_pp0_stage8_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln25_4_reg_244 == 1'd1) & (1'b0 == ap_block_pp0_stage6_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln25_2_reg_226 == 1'd1) & (1'b0 == ap_block_pp0_stage4_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln25_reg_208 == 1'd1) & (1'b0 == ap_block_pp0_stage2_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln25_8_reg_280 == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        req_strm_V_din = reg_143;
    end else if ((((icmp_ln25_6_reg_262 == 1'd0) & (1'b0 == ap_block_pp0_stage8_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln25_5_reg_253 == 1'd0) & (1'b0 == ap_block_pp0_stage7_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln25_4_reg_244 == 1'd0) & (1'b0 == ap_block_pp0_stage6_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln25_3_reg_235 == 1'd0) & (1'b0 == ap_block_pp0_stage5_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln25_2_reg_226 == 1'd0) & (1'b0 == ap_block_pp0_stage4_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln25_1_reg_217 == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln25_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln25_7_reg_271 == 1'd0) & (1'b0 == ap_block_pp0_stage9_01001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln25_8_reg_280 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln25_9_reg_289 == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        req_strm_V_din = 32'd0;
    end else begin
        req_strm_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln25_6_reg_262 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln25_6_reg_262 == 1'd1) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln25_5_reg_253 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln25_5_reg_253 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln25_4_reg_244 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln25_4_reg_244 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln25_3_reg_235 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln25_3_reg_235 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln25_2_reg_226 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln25_2_reg_226 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln25_1_reg_217 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln25_1_reg_217 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln25_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln25_reg_208 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln25_7_reg_271 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln25_7_reg_271 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln25_8_reg_280 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln25_8_reg_280 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln25_9_reg_289 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln25_9_reg_289 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        req_strm_V_write = 1'b1;
    end else begin
        req_strm_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
            tb_address0 = sext_ln24_9_fu_198_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
            tb_address0 = sext_ln24_8_fu_193_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
            tb_address0 = sext_ln24_7_fu_188_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
            tb_address0 = sext_ln24_6_fu_183_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
            tb_address0 = sext_ln24_5_fu_178_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            tb_address0 = sext_ln24_4_fu_173_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            tb_address0 = sext_ln24_3_fu_168_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            tb_address0 = sext_ln24_2_fu_163_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            tb_address0 = sext_ln24_1_fu_158_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tb_address0 = sext_ln24_fu_153_p1;
        end else begin
            tb_address0 = 'bx;
        end
    end else begin
        tb_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tb_ce0 = 1'b1;
    end else begin
        tb_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((real_start == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln25_8_reg_280 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_8_reg_280 == 1'd1) & (req_strm_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln25_8_reg_280 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_8_reg_280 == 1'd1) & (req_strm_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln25_8_reg_280 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_8_reg_280 == 1'd1) & (req_strm_V_full_n == 1'b0)))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((in_strm_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln25_9_reg_289 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_9_reg_289 == 1'd1) & (req_strm_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((in_strm_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln25_9_reg_289 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_9_reg_289 == 1'd1) & (req_strm_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((in_strm_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln25_9_reg_289 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_9_reg_289 == 1'd1) & (req_strm_V_full_n == 1'b0)))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_reg_208 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_reg_208 == 1'd1) & (req_strm_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_reg_208 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_reg_208 == 1'd1) & (req_strm_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_reg_208 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_reg_208 == 1'd1) & (req_strm_V_full_n == 1'b0)))));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_1_reg_217 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_1_reg_217 == 1'd1) & (req_strm_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_1_reg_217 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_1_reg_217 == 1'd1) & (req_strm_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_1_reg_217 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_1_reg_217 == 1'd1) & (req_strm_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_2_reg_226 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_2_reg_226 == 1'd1) & (req_strm_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_2_reg_226 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_2_reg_226 == 1'd1) & (req_strm_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_2_reg_226 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_2_reg_226 == 1'd1) & (req_strm_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_3_reg_235 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_3_reg_235 == 1'd1) & (req_strm_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_3_reg_235 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_3_reg_235 == 1'd1) & (req_strm_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_3_reg_235 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_3_reg_235 == 1'd1) & (req_strm_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_4_reg_244 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_4_reg_244 == 1'd1) & (req_strm_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_4_reg_244 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_4_reg_244 == 1'd1) & (req_strm_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_4_reg_244 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_4_reg_244 == 1'd1) & (req_strm_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_5_reg_253 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_5_reg_253 == 1'd1) & (req_strm_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_5_reg_253 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_5_reg_253 == 1'd1) & (req_strm_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_5_reg_253 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_5_reg_253 == 1'd1) & (req_strm_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_6_reg_262 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_6_reg_262 == 1'd1) & (req_strm_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_6_reg_262 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_6_reg_262 == 1'd1) & (req_strm_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_6_reg_262 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_6_reg_262 == 1'd1) & (req_strm_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_7_reg_271 == 1'd1) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_7_reg_271 == 1'd0) & (req_strm_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_7_reg_271 == 1'd1) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_7_reg_271 == 1'd0) & (req_strm_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_7_reg_271 == 1'd1) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_7_reg_271 == 1'd0) & (req_strm_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_7_reg_271 == 1'd1) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_7_reg_271 == 1'd0) & (req_strm_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state11_pp0_stage0_iter1 = (((icmp_ln25_8_reg_280 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_8_reg_280 == 1'd1) & (req_strm_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state12_pp0_stage1_iter1 = (((icmp_ln25_9_reg_289 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_9_reg_289 == 1'd1) & (req_strm_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((in_strm_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = (in_strm_V_empty_n == 1'b0);
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_reg_208 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_reg_208 == 1'd1) & (req_strm_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_1_reg_217 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_1_reg_217 == 1'd1) & (req_strm_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_2_reg_226 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_2_reg_226 == 1'd1) & (req_strm_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_3_reg_235 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_3_reg_235 == 1'd1) & (req_strm_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_4_reg_244 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_4_reg_244 == 1'd1) & (req_strm_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_5_reg_253 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_5_reg_253 == 1'd1) & (req_strm_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = ((in_strm_V_empty_n == 1'b0) | ((icmp_ln25_6_reg_262 == 1'd0) & (req_strm_V_full_n == 1'b0)) | ((icmp_ln25_6_reg_262 == 1'd1) & (req_strm_V_full_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign grp_fu_137_p2 = (($signed(tb_q0) < $signed(32'd10)) ? 1'b1 : 1'b0);

assign sext_ln24_1_fu_158_p0 = in_strm_V_dout;

assign sext_ln24_1_fu_158_p1 = sext_ln24_1_fu_158_p0;

assign sext_ln24_2_fu_163_p0 = in_strm_V_dout;

assign sext_ln24_2_fu_163_p1 = sext_ln24_2_fu_163_p0;

assign sext_ln24_3_fu_168_p0 = in_strm_V_dout;

assign sext_ln24_3_fu_168_p1 = sext_ln24_3_fu_168_p0;

assign sext_ln24_4_fu_173_p0 = in_strm_V_dout;

assign sext_ln24_4_fu_173_p1 = sext_ln24_4_fu_173_p0;

assign sext_ln24_5_fu_178_p0 = in_strm_V_dout;

assign sext_ln24_5_fu_178_p1 = sext_ln24_5_fu_178_p0;

assign sext_ln24_6_fu_183_p0 = in_strm_V_dout;

assign sext_ln24_6_fu_183_p1 = sext_ln24_6_fu_183_p0;

assign sext_ln24_7_fu_188_p0 = in_strm_V_dout;

assign sext_ln24_7_fu_188_p1 = sext_ln24_7_fu_188_p0;

assign sext_ln24_8_fu_193_p0 = in_strm_V_dout;

assign sext_ln24_8_fu_193_p1 = sext_ln24_8_fu_193_p0;

assign sext_ln24_9_fu_198_p0 = in_strm_V_dout;

assign sext_ln24_9_fu_198_p1 = sext_ln24_9_fu_198_p0;

assign sext_ln24_fu_153_p0 = in_strm_V_dout;

assign sext_ln24_fu_153_p1 = sext_ln24_fu_153_p0;

assign start_out = real_start;

endmodule //readmemA
